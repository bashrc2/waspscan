#!/bin/bash

#  Copyright (C) 2015-2016 Bob Mottram
#  bob@libreserver.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

MIN_DIPPED_DENSITY=0.38
MIN_INTERMEDIATE=5
MAX_INTERMEDIATE=20
MAX_DIPPED_PERCENT=20
DIP_RADIUS_PERCENT=2
PEAK_THRESHOLD=0.6
MAX_VACANCY_DENSITY=0.008
MIN_DATA_SAMPLES=1000
DIP_THRESHOLD=0.2

SCAN_COMMAND="../waspscan --peak $PEAK_THRESHOLD --diprad $DIP_RADIUS_PERCENT --maxd $MAX_DIPPED_PERCENT --mindd $MIN_DIPPED_DENSITY --maxint $MAX_INTERMEDIATE --minint $MIN_INTERMEDIATE --min 0.8 --max 4.2 --minsamples $MIN_DATA_SAMPLES --maxvac $MAX_VACANCY_DENSITY --dip $DIP_THRESHOLD -f"

score=0

function scan_positives {
    ctr_detected=0
    ctr_positive=0
    fails=0
    tollerance=0.01

    FILES=positive/*
    for f in $FILES
    do
        echo "Scanning $f"

        ref=$(echo "$f" | awk -F '_' '{print $2}' | awk -F '.tbl' '{print $1}')
        expected_period=$(cat positive/periods.txt | grep "$ref" | head -n 1 | awk -F ' ' '{print $2}')
        min_period=$(awk -vn1="$expected_period" -vn2="$tollerance" 'BEGIN{printf ("%.8f\n",n1-n2)}')
        max_period=$(awk -vn1="$expected_period" -vn2="$tollerance" 'BEGIN{printf ("%.8f\n",n1+n2)}')

        was_detected=0
        result=$(${SCAN_COMMAND} "$f")
        if [[ $result == *"orbital_period"* ]]; then
            detected_period=$(echo $result | awk -F 'orbital_period_days ' '{print $2}')
            echo "detected period: $detected_period"
            if [ $(awk -vn1="$detected_period" -vn2="$min_period" 'BEGIN{printf ("%d\n",n1<n2)}') -eq 0 ]; then
                if [ $(awk -vn1="$detected_period" -vn2="$max_period" 'BEGIN{printf ("%d\n",n1>n2)}') -eq 0 ]; then
                    ctr_detected=$((ctr_detected + 1))
                    was_detected=1
                else
                    echo "Detected $detected_period but greater than the maximum expected orbital period $max_period"
                fi
            else
                echo "Detected $detected_period but less than the minimum expected orbital period $min_period"
            fi
        fi
        if [[ $was_detected == 0 ]]; then
            fails=$((fails + 1))
        fi
        if [ ${fails} -gt 2 ]; then
            echo 'Too many failures'
            exit 1
        fi
        ctr_positive=$((ctr_positive + 1))
        echo "${ctr_detected}/${ctr_positive} positive detections"
    done

    score=$((score + ctr_detected))
}

function scan_negatives {
    ctr_detected=0
    ctr_negative=0

    FILES=negative/*
    for f in $FILES
    do
        echo "Scanning $f"
        ${SCAN_COMMAND} "$f"
        if [ ! "$?" = "0" ]; then
            ctr_detected=$((ctr_detected + 1))
        fi
        ctr_negative=$((ctr_negative + 1))
        echo "${ctr_detected}/${ctr_negative} negative detections"
    done
    score=$((score + ctr_detected))
}

scan_positives
scan_negatives

rm *.png *.tbl *.txt

echo "$score,$PEAK_THRESHOLD,$MIN_DIPPED_DENSITY,$MIN_INTERMEDIATE,$MAX_INTERMEDIATE,$MAX_DIPPED_PERCENT,$DIP_RADIUS_PERCENT" >> results.csv

cat results.csv

exit 0
